@page "/products"
@using Volo.Abp.Application.Dtos
@using Hali.Product.Models
@using Hali.Product.Localization
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<ProductResource> L
@inject AbpBlazorMessageLocalizerHelper<ProductResource> LH
@inject NavigationManager NavigationManager
@inherits AbpCrudPageBase<IProductAppService, ProductDto, Guid, PagedAndSortedResultRequestDto, CreateUpdateProductDto>

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Products"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Color.Primary"
                        Clicked="OpenCreateModalAsync">
                    @L["NewProduct"]
                </Button>
            </Column>
        </Row>
    </CardHeader>

    <CardBody>
        <DataGrid TItem="ProductDto"
                  Data="@Entities"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.Name)"
                                Caption="@L["Name"]">
                    <DisplayTemplate>
                        <a href="product/@context.Id">@context.Name</a>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.CategoryId)"
                                Caption="@L["Category"]">
                    <DisplayTemplate>
                        @{
                            var categoryName = Categories.FirstOrDefault(c => c.Id == context.CategoryId)?.Name;
                        }
                        @categoryName
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.PublishDate)"
                                Caption="@L["PublishDate"]">
                    <DisplayTemplate>
                        @context.PublishDate.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.Price)"
                                Caption="@L["Price"]"></DataGridColumn>
                <DataGridColumn Caption="@L["Actions"]">
                    <DisplayTemplate>
                        <Button Color="Color.Danger" @onclick="() => DeleteEntityAsync(context)">@L["Delete"]</Button>
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="@CreateModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewBook"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["Category"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@NewEntity.CategoryId">
                            @foreach (var category in Categories)
                            {
                                <SelectItem TValue="Guid" Value="@category.Id">@category.Name</SelectItem>
                            }
                        </Select>
                    </Field>
                    <Field>
                        <FieldLabel>@L["PublishDate"]</FieldLabel>
                        <DateEdit TValue="DateTime" @bind-Date="NewEntity.PublishDate"/>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Price"]</FieldLabel>
                        <NumericEdit TValue="float" @bind-Value="NewEntity.Price"/>
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateModalAsync">@L["Cancel"]</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>



<Modal @ref="@EditModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@EditingEntity.Name</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingEntity.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["Category"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@EditingEntity.CategoryId">
                            @foreach (var category in Categories)
                            {
                                <SelectItem TValue="Guid" Value="@category.Id">@category.Name</SelectItem>
                            }
                        </Select>
                    </Field>
                    <Field>
                        <FieldLabel>@L["PublishDate"]</FieldLabel>
                        <DateEdit TValue="DateTime" @bind-Date="EditingEntity.PublishDate"/>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Price"]</FieldLabel>
                        <NumericEdit TValue="float" @bind-Value="EditingEntity.Price"/>
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditModalAsync">@L["Cancel"]</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>
@code {
    private void NavigateToProductDetail(Guid productId)
    {
        NavigationManager.NavigateTo($"product/{productId}");
    }
}
